/*
Package system script.
Uses the VFS class provided by the engine to make package management easier
*/

class PackageSystem

    static runLoadCtr = 0
    
    init
        raise "This class is a singleton and should not be instanced!"
    end
    
    // load a .lvpa file in directory "packages", or a subdir with that name
    function Load(pkg)
        > "PackageSystem:Load(", pkg, ")"
        p = "packages/" + pkg
        from_cont = VFS.AddContainer(p + ".lvpa")
        from_dir = VFS.AddPath(p)
        if not ScriptLoader.LoadFile("package.fal")
            > @ "ERROR: Package '$pkg': Loading the 'package.fal' script failed!"
        end
        return (from_dir or from_cont)
    end
    
    // register a function that will be called once at next engine tick
    function RunAfterLoad(func)
        self.runLoadCtr++
        proxy = {f => f(); return true}
        RegisterUpdateHook("PackageSystem_RunAfterLoad_" + self.runLoadCtr, [ proxy , func] )
    end
end

export
