/*
Package system script.
Uses the VFS class provided by the engine to make package management easier
*/

class PackageSystem

    static runLoadCtr = 0
    
    init
        raise "This class is a singleton and should not be instanced!"
    end
    
    // load a .lvpa file in directory "packages", or a subdir with that name
    function Load(pkg)
        > "PackageSystem:Load(", pkg, ")"
        p = "packages/" + pkg
        from_cont = VFS.AddContainer(p + ".lvpa", p, false) // add the container contents into package/<name> directory, keeping files on disk with a higher priority 
        m = VFS.Merge(p, "") // merge the package directory into root dir
        if not m // this cant happen
            > "PackageSystem:Load: MERGE ERROR"
            return false
        end
        if not ScriptLoader.LoadFile("package.fal")
            > @ "ERROR: Package '$pkg': Loading the 'package.fal' script failed!"
        end
        
        return from_cont or (pkg in VFS.GetDirList("packages"))
    end
    
    // register a function that will be called once at next engine tick
    function RunAfterLoad(func)
        CallScheduler.Schedule(func, 1)
    end
end

export
