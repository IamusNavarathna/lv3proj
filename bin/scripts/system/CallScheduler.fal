

class CallScheduler
    
    static _calls = nil
    
    init
        raise "CallScheduler: This class should not be instanced."
    end 
    
    function Init()
        self._calls = []
    end
    
    function Schedule(item, ms)
        if not isCallable(item): return false
        self._calls.add( [Engine.GetTime() + ms, item] )
        return true
    end
    
    function CallDue()
        for pair in self._calls
            time, item = pair
            if(time < Engine.GetTime())
                try
                    item()
                catch in err
                    > "CallScheduler: Error in task '", item, "':"
                    > err
                end
                continue dropping
            end
        end
    end
    
    function Count(): return len(self._calls)

end

CallScheduler.Init()

// process events that were registered with CallScheduler.Schedule on every engine tick
RegisterUpdateHook(CallScheduler.CallDue)


export CallScheduler
