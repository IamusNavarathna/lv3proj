class ActionObject from Object
    
    gfx = nil
    maxdist = 0 // in pixels
    sound = nil // sound played when the object is used (filename string)
    sound2 = nil // sound played when the object is stopped beeing used (filenme string)
    
    _sound = nil // the actual Sound objects
    _sound2 = nil
    
    init
        self.SetAffectedByPhysics(false)
        // collision has to be enabled, since we can trigger buttons and levers also with arrows and alike...
        self.SetBBox(0,0,16,16)
        if self.gfx
            tile = self.SetSprite(self.gfx)
            if tile and tile.type == TILETYPE_ANIMATED: tile.name = "default"
        end
        if self.sound:  self._sound  = Sound(self.sound)
        if self.sound2: self._sound2 = Sound(self.sound2)
    end
    
    function OnTouchedBy(side, who)
        if who.type != OBJTYPE_PLAYER: return
        if not who.RegisterActionHandler(self.HandleAction)
            > "Huh?! ActionObject::OnTouch() failed to register (", who, ")"
        end
    end
    
    function HandleAction(who, state)
        if self.GetDistance(who) <= self.maxdist
            
            // handle the action (overloaded method)
            handled = self.OnAction(who, state) // returns true if action was performed
            if handled
                // play sounds
                if state
                    if self._sound: self._sound.Play()
                    if self._sound2: self._sound2.Stop()
                else
                    if self._sound2
                        self._sound2.Play()
                        if self._sound: self._sound.Stop()
                    end
                end
            end
        end
    end
    
    function OnAction(who, state)
        > "Warning: ActionObject::OnAction(): not overloaded method called"
    end
end

export ActionObject
